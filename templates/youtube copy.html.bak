<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>YouTube视频下载器</title>
    <link rel="icon" type="image/x-icon" href="/static/img/favicon.ico">
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-50">
    <!-- 导航栏 -->
    <nav class="bg-white shadow-lg">
        <div class="max-w-7xl mx-auto px-4">
            <div class="flex justify-between h-16">
                <div class="flex">
                    <!-- Logo -->
                    <div class="flex-shrink-0 flex items-center">
                        <svg class="h-8 w-8 text-red-500" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z"/>
                        </svg>
                        <span class="ml-2 text-xl font-bold text-gray-800">YouTube下载器</span>
                    </div>
                    <!-- 导航链接 -->
                    <div class="hidden sm:ml-6 sm:flex sm:space-x-8">
                        <a href="/" 
                           class="border-b-2 border-red-500 text-gray-900 inline-flex items-center px-1 pt-1 text-sm font-medium">
                            单视频下载
                        </a>
                        <a href="/batch" 
                           class="border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 inline-flex items-center px-1 pt-1 text-sm font-medium">
                            批量下载
                        </a>
                        <a href="/history" 
                           class="border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 inline-flex items-center px-1 pt-1 text-sm font-medium">
                            下载历史
                        </a>
                        <a href="/settings" 
                           class="border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 inline-flex items-center px-1 pt-1 text-sm font-medium">
                            设置
                        </a>
                    </div>
                </div>
                <!-- 移动端菜单按钮 -->
                <div class="sm:hidden flex items-center">
                    <button type="button" onclick="toggleMobileMenu()" class="text-gray-500 hover:text-gray-700 focus:outline-none">
                        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
                        </svg>
                    </button>
                </div>
            </div>
        </div>
        <!-- 移动端菜单 -->
        <div class="sm:hidden hidden" id="mobile-menu">
            <div class="pt-2 pb-3 space-y-1">
                <a href="/" class="bg-red-50 border-l-4 border-red-500 text-red-700 block pl-3 pr-4 py-2 text-base font-medium">
                    单视频下载
                </a>
                <a href="/batch" class="border-l-4 border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 block pl-3 pr-4 py-2 text-base font-medium">
                    批量下载
                </a>
                <a href="/history" class="border-l-4 border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 block pl-3 pr-4 py-2 text-base font-medium">
                    下载历史
                </a>
                <a href="/settings" class="border-l-4 border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 block pl-3 pr-4 py-2 text-base font-medium">
                    设置
                </a>
            </div>
        </div>
    </nav>

    <!-- 主要内容区域 -->
    <div class="container mx-auto px-4 py-8">
        <!-- 页面标题 -->
        <div class="text-center mb-12">
            <h1 class="text-4xl font-bold text-gray-800 mb-2">YouTube视频下载器</h1>
            <p class="text-gray-600">输入YouTube视频链接，轻松下载高质量视频</p>
        </div>
        
        <!-- 下载表单 -->
        <div class="max-w-2xl mx-auto mb-12">
            <div class="flex gap-4">
                <input type="text" id="video-url" 
                    class="flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" 
                    placeholder="输入YouTube视频链接...">
                <button onclick="startDownload()" 
                    class="px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors">
                    下载
                </button>
                <button onclick="refreshPage()" 
                    class="px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors">
                    刷新
                </button>
            </div>
            
            <!-- 下载进度 -->
            <div id="progress-container" class="mt-4 hidden">
                <div class="w-full bg-gray-200 rounded-full h-2">
                    <div id="progress-bar-fill" class="bg-blue-500 h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
                </div>
                <div class="flex justify-between items-center mt-2">
                    <div id="progress-text" class="text-sm text-gray-600">0%</div>
                    <button onclick="cancelPolling()" 
                        class="text-sm text-red-500 hover:text-red-600">
                        取消下载
                    </button>
                </div>
            </div>
        </div>

        <!-- 视频列表 -->
        <div class="max-w-6xl mx-auto">
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-2xl font-semibold text-gray-800">已下载视频</h2>
                <!-- 全部展开/折叠按钮 -->
                <div class="flex gap-4">
                    <button onclick="toggleAllSections(true)" 
                        class="text-sm text-blue-500 hover:text-blue-600 flex items-center">
                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
                        </svg>
                        全部展开
                    </button>
                    <button onclick="toggleAllSections(false)" 
                        class="text-sm text-blue-500 hover:text-blue-600 flex items-center">
                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7"/>
                        </svg>
                        全部折叠
                    </button>
                </div>
            </div>
            
            <!-- 日期分组 -->
            {% for date, videos in videos_by_date.items() %}
            <div class="mb-8">
                <!-- 日期标题和展开/折叠按钮 -->
                <div class="flex items-center justify-between mb-4 cursor-pointer hover:bg-gray-50 p-2 rounded-lg transition-colors"
                     onclick="toggleSection('{{ date }}')"
                     id="header-{{ date }}">
                    <div class="flex items-center">
                        <h3 class="text-lg font-medium text-gray-700">
                            {% if date == today %}
                                今天
                            {% else %}
                                {{ date }}
                            {% endif %}
                        </h3>
                        <span class="ml-2 px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded-full">
                            {{ videos|length }} 个视频
                        </span>
                    </div>
                    <button class="text-gray-500 hover:text-gray-700 transition-colors">
                        <svg class="w-5 h-5 transform transition-transform duration-200" 
                             id="icon-{{ date }}"
                             fill="none" 
                             stroke="currentColor" 
                             viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
                        </svg>
                    </button>
                </div>
                
                <!-- 视频网格 -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 transition-all duration-300 ease-in-out overflow-hidden"
                     id="section-{{ date }}"
                     style="max-height: none;">
                    {% for video in videos %}
                    <div class="bg-white rounded-xl shadow-sm overflow-hidden hover:shadow-md transition-shadow">
                        <!-- 视频预览容器 -->
                        <div class="relative aspect-video bg-gray-100 group cursor-pointer">
                            {% set video_id = video.file_path.split('/')[-1].split('.')[0] %}
                            <video 
                                class="w-full h-full object-cover"
                                poster="/{{ video.thumbnail_path }}"
                                preload="none"
                                controls
                                controlsList="nodownload"
                                id="video-{{ video_id }}"
                                onplay="hideOverlay(this)"
                                onpause="showOverlay(this)"
                                onended="showOverlay(this)"
                                onerror="handleVideoError(this)"
                            >
                                <source src="/{{ video.file_path }}" type="video/mp4">
                                <p class="text-red-500 p-4">视频加载失败，请刷新页面重试</p>
                            </video>
                            <!-- 播放按钮遮罩 -->
                            <div class="absolute inset-0 flex items-center justify-center bg-black bg-opacity-20 group-hover:bg-opacity-30 transition-opacity"
                                 id="overlay-{{ video_id }}"
                                 onclick="playVideo('{{ video_id }}')">
                                <div class="w-12 h-12 rounded-full bg-white bg-opacity-80 flex items-center justify-center">
                                    <svg class="w-6 h-6 text-gray-800" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M6.3 2.841A1.5 1.5 0 004 4.11V15.89a1.5 1.5 0 002.3 1.269l9.344-5.89a1.5 1.5 0 000-2.538L6.3 2.84z"/>
                                    </svg>
                                </div>
                            </div>
                            <!-- 加载指示器 -->
                            <div class="absolute inset-0 bg-gray-100 flex items-center justify-center" 
                                 id="loading-{{ video_id }}"
                                 style="display: none;">
                                <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500"></div>
                            </div>
                        </div>
                        
                        <!-- 视频信息 -->
                        <div class="p-4">
                            <h3 class="font-medium text-gray-900 mb-2 line-clamp-2">{{ video.title }}</h3>
                            <div class="space-y-1 text-sm text-gray-600">
                                <p>{{ video.author }}</p>
                                <p>{{ video.duration // 60 }}分{{ video.duration % 60 }}秒 · {{ "%.1f"|format(video.file_size) }}MB</p>
                                
                                <!-- 更多信息下拉框 -->
                                <details class="mt-2">
                                    <summary class="cursor-pointer text-blue-500 hover:text-blue-600 text-sm">更多信息</summary>
                                    <div class="mt-2 p-3 bg-gray-50 rounded-lg text-xs space-y-2">
                                        <div class="grid grid-cols-1 gap-2">
                                            <div>
                                                <p class="font-medium text-gray-700">视频文件:</p>
                                                <p class="text-gray-600 break-all">{{ video.file_path }}</p>
                                            </div>
                                            <div>
                                                <p class="font-medium text-gray-700">音频文件:</p>
                                                <p class="text-gray-600 break-all">{{ video.audio_path }}</p>
                                            </div>
                                            <div>
                                                <p class="font-medium text-gray-700">封面图片:</p>
                                                <p class="text-gray-600 break-all">{{ video.thumbnail_path }}</p>
                                            </div>
                                            <div>
                                                <p class="font-medium text-gray-700">视频描述:</p>
                                                <p class="text-gray-600 whitespace-pre-wrap">{{ video.description }}</p>
                                            </div>
                                        </div>
                                    </div>
                                </details>
                                
                                <!-- 下载按钮组 -->
                                <div class="mt-3 flex flex-wrap gap-2">
                                    <button onclick="downloadVideo('{{ video.file_path }}')"
                                            class="inline-flex items-center text-sm text-blue-500 hover:text-blue-600 focus:outline-none">
                                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"/>
                                        </svg>
                                        下载视频
                                    </button>
                                    <button onclick="downloadAudio('{{ video.audio_path }}')"
                                            class="inline-flex items-center text-sm text-purple-500 hover:text-purple-600 focus:outline-none">
                                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3"/>
                                        </svg>
                                        下载音频
                                    </button>
                                    <button onclick="downloadThumbnail('{{ video.thumbnail_path }}')"
                                            class="inline-flex items-center text-sm text-green-500 hover:text-green-600 focus:outline-none">
                                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                                        </svg>
                                        下载封面
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    {% endfor %}
                </div>
            </div>
            {% else %}
            <p class="text-gray-500 text-center py-8">最近一周没有下载记录</p>
            {% endfor %}
        </div>
    </div>

    <script>
        let currentVideoId = null;
        let pollingInterval = null;
        let lastProgress = 0;
        let noProgressCount = 0;

        // 刷新页面
        function refreshPage() {
            location.reload();
        }

        // 取消轮询
        function cancelPolling() {
            currentVideoId = null;
            lastProgress = 0;
            noProgressCount = 0;
            const progressContainer = document.getElementById('progress-container');
            progressContainer.classList.add('hidden');
        }

        // 视频播放控制
        function playVideo(videoId) {
            const video = document.getElementById(`video-${videoId}`);
            const loading = document.getElementById(`loading-${videoId}`);
            const overlay = document.getElementById(`overlay-${videoId}`);

            // 显示加载指示器
            loading.style.display = 'flex';
            overlay.style.display = 'none';

            // 设置视频预览图为第一帧
            video.addEventListener('loadeddata', function() {
                video.currentTime = 1; // 设置到第1秒，避免黑屏
            }, { once: true });

            // 开始加载视频
            video.load();
            video.play().catch(error => {
                console.error('播放错误:', error);
                loading.style.display = 'none';
                overlay.style.display = 'flex';
                alert('视频播放失败，请稍后重试');
            });
        }

        function hideOverlay(video) {
            const videoId = video.id.split('video-')[1];
            const loading = document.getElementById(`loading-${videoId}`);
            const overlay = document.getElementById(`overlay-${videoId}`);
            loading.style.display = 'none';
            overlay.style.display = 'none';
        }

        function showOverlay(video) {
            const videoId = video.id.split('video-')[1];
            const overlay = document.getElementById(`overlay-${videoId}`);
            overlay.style.display = 'flex';
        }

        function handleVideoError(video) {
            const videoId = video.id.split('video-')[1];
            const loading = document.getElementById(`loading-${videoId}`);
            const overlay = document.getElementById(`overlay-${videoId}`);
            loading.style.display = 'none';
            overlay.style.display = 'flex';
            alert('视频加载失败，请刷新页面重试');
        }

        // 视频下载处理
        function downloadVideo(filePath) {
            downloadFile(`/${filePath}`, filePath.split('/').pop());
        }

        // 音频下载处理
        function downloadAudio(audioPath) {
            if (!audioPath) {
                alert('音频文件路径不存在');
                return;
            }
            downloadFile(`/${audioPath}`, audioPath.split('/').pop());
        }

        // 缩略图下载处理
        function downloadThumbnail(thumbnailPath) {
            if (!thumbnailPath) {
                alert('缩略图文件路径不存在');
                return;
            }
            downloadFile(`/${thumbnailPath}`, thumbnailPath.split('/').pop());
        }

        // 通用下载函数
        function downloadFile(url, filename) {
            fetch(url)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('文件不存在或无法访问');
                    }
                    return response.blob();
                })
                .then(blob => {
                    const link = document.createElement('a');
                    link.href = URL.createObjectURL(blob);
                    link.download = filename;
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                    URL.revokeObjectURL(link.href);
                })
                .catch(error => {
                    console.error('下载失败:', error);
                    alert('下载失败: ' + error.message);
                });
        }

        async function startDownload() {
            const urlInput = document.getElementById('video-url');
            const url = urlInput.value.trim();
            
            if (!url) {
                alert('请输入视频链接');
                return;
            }

            // 取消之前的轮询
            cancelPolling();

            // 显示进度条
            const progressContainer = document.getElementById('progress-container');
            const progressBar = document.getElementById('progress-bar-fill');
            const progressText = document.getElementById('progress-text');
            progressContainer.classList.remove('hidden');
            progressBar.style.width = '0%';
            progressBar.style.backgroundColor = '#3B82F6'; // 蓝色
            progressText.textContent = '准备下载...';
            
            try {
                // 提取视频ID
                const videoId = url.match(/(?:v=|\/)([a-zA-Z0-9_-]{11})/)?.[1];
                if (!videoId) {
                    throw new Error('无法识别视频ID');
                }

                // 设置初始进度为10%
                progressBar.style.width = '10%';
                progressText.textContent = '10% - 正在解析视频...';
                
                // 创建FormData对象
                const formData = new FormData();
                formData.append('url', url);
                
                // 开始下载
                const response = await fetch('/download', {
                    method: 'POST',
                    body: formData
                });
                
                const result = await response.json();
                
                if (!response.ok) {
                    throw new Error(result.message || '下载请求失败');
                }

                // 设置当前下载的视频ID
                currentVideoId = videoId;
                lastProgress = 10; // 设置lastProgress为10，这样不会触发无进度检测
                noProgressCount = 0;

                // 启动第一次进度查询
                await pollProgress();
                
            } catch (error) {
                console.error('下载失败:', error);
                const progressText = document.getElementById('progress-text');
                const progressBar = document.getElementById('progress-bar-fill');
                progressText.textContent = error.message;
                progressBar.style.backgroundColor = '#EF4444'; // 红色
            }
        }

        async function pollProgress() {
            if (!currentVideoId) return;

            try {
                const response = await fetch(`/progress/${currentVideoId}`);
                const data = await response.json();
                
                // 更新进度条
                const progress = data.progress || 0;
                const progressBar = document.getElementById('progress-bar-fill');
                const progressText = document.getElementById('progress-text');
                
                // 检查进度是否有变化
                if (progress === lastProgress) {
                    noProgressCount++;
                    // 如果3秒没有进度变化，认为下载可能出现问题
                    if (noProgressCount >= 6) { // 500ms * 6 = 3秒
                        progressText.textContent = "下载可能出现问题，请刷新页面重试";
                        progressBar.style.backgroundColor = '#EF4444'; // 红色
                        return;
                    }
                } else {
                    noProgressCount = 0;
                    lastProgress = progress;
                }
                
                // 平滑更新进度条
                progressBar.style.transition = 'width 100ms linear';
                progressBar.style.width = `${progress}%`;
                progressText.textContent = `${Math.round(progress)}%`;
                
                // 如果下载完成
                if (progress >= 100) {
                    progressText.textContent = "下载完成！";
                    progressBar.style.backgroundColor = '#10B981'; // 绿色
                    
                    // 清空输入框
                    document.getElementById('video-url').value = '';
                    
                    // 延迟一秒后刷新视频列表
                    setTimeout(() => {
                        updateVideoList();
                    }, 1000);
                    
                    // 3秒后自动关闭进度条
                    setTimeout(() => {
                        cancelPolling();
                    }, 3000);
                    
                    // 重置状态
                    currentVideoId = null;
                    return;
                }
                
                // 如果还没完成，设置下一次轮询
                setTimeout(() => pollProgress(), 500);
                
            } catch (error) {
                console.error('获取进度失败:', error);
                const progressText = document.getElementById('progress-text');
                const progressBar = document.getElementById('progress-bar-fill');
                progressText.textContent = "获取进度失败，请刷新页面重试";
                progressBar.style.backgroundColor = '#EF4444'; // 红色
            }
        }

        // 更新视频列表
        async function updateVideoList() {
            try {
                const response = await fetch(window.location.href);
                const html = await response.text();
                const parser = new DOMParser();
                const newDoc = parser.parseFromString(html, 'text/html');
                
                // 更新视频列表部分
                const currentList = document.querySelector('.grid');
                const newList = newDoc.querySelector('.grid');
                if (currentList && newList) {
                    currentList.innerHTML = newList.innerHTML;
                }
            } catch (error) {
                console.error('更新视频列表失败:', error);
                alert('更新视频列表失败，请手动刷新页面');
            }
        }

        // 添加新的展开/折叠功能
        function toggleSection(date) {
            const section = document.getElementById(`section-${date}`);
            const icon = document.getElementById(`icon-${date}`);
            const header = document.getElementById(`header-${date}`);
            
            if (section.style.maxHeight === 'none' || section.style.maxHeight === '') {
                // 折叠
                section.style.maxHeight = '0px';
                section.style.opacity = '0';
                icon.style.transform = 'rotate(180deg)';
                header.classList.add('border-b', 'border-gray-200');
            } else {
                // 展开
                section.style.maxHeight = 'none';
                section.style.opacity = '1';
                icon.style.transform = 'rotate(0deg)';
                header.classList.remove('border-b', 'border-gray-200');
            }
        }

        // 全部展开/折叠功能
        function toggleAllSections(expand) {
            const dates = JSON.parse('{{ dates_for_js|safe }}');
            Object.keys(dates).forEach(date => {
                const section = document.getElementById(`section-${date}`);
                const icon = document.getElementById(`icon-${date}`);
                const header = document.getElementById(`header-${date}`);
                
                if (expand) {
                    // 展开
                    section.style.maxHeight = 'none';
                    section.style.opacity = '1';
                    icon.style.transform = 'rotate(0deg)';
                    header.classList.remove('border-b', 'border-gray-200');
                } else {
                    // 折叠
                    section.style.maxHeight = '0px';
                    section.style.opacity = '0';
                    icon.style.transform = 'rotate(180deg)';
                    header.classList.add('border-b', 'border-gray-200');
                }
            });
        }

        // 移动端菜单切换
        function toggleMobileMenu() {
            const menu = document.getElementById('mobile-menu');
            menu.classList.toggle('hidden');
        }
    </script>
</body>
</html> 